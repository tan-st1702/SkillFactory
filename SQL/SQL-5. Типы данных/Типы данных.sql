/*markdown
![Alt text](image.png)
*/

/*markdown
#  ОСНОВНЫЕ ТИПЫ ДАННЫХ В POSTGRESQL
*/

/*markdown
Типы данных в *PostgreSQL* можно разделить на несколько групп. К основным относятся:

* числовые типы — для хранения чисел (целых и дробных);
* типы даты/времени — для хранения даты, времени, часовых поясов;
* символьные типы — для хранения символов или строк;
* логический тип — для хранения значений типа «истина», «ложь».
*/

/*markdown
### Даты: основные типы
*/

/*markdown
![Alt text](image-1.png)
*/

/*markdown
### **TIMESTAMP**
*/

/*markdown
![Alt text](image-2.png)
*/

/*markdown
Для получения текущего значения даты и времени используются функции **`CURRENT_TIMESTAMP`** и **`NOW()`**
*/

SELECT CURRENT_TIMESTAMP

# или

SELECT NOW()

/*markdown
![Alt text](image-3.png)

Список часовых поясов можно увидеть в системном справочнике pg_timezone_names:

![Alt text](image-4.png)
*/

select now() at time zone 'Europe/Moscow'

/*markdown
В таблице ниже приведены примеры того, как работает at time zone для разных типов данных.

![Alt text](image-5.png)
*/

/*markdown
### **DATE**
*/

/* С типом date вы уже знакомы, его реализация предельно проста. Отметим только, 
что тип timestamp (with/without time zone) можно легко перевести в соответствующую дату, 
используя синтаксис: */

"timestamp_column"::date

/* И наоборот, тип date преобразуется в timestamp (дата и 00:00:00) с помощью: */

"date_column"::timestamp

/* Для получения текущей даты можно использовать */

select CURRENT_DATE

/* или */

select now()::date

/*markdown
### **INTERVAL**
*/

/*markdown
![Alt text](image-6.png)

Интервалы хранят данные в трёх отдельных полях — месяцах, днях, секундах. Это сделано из-за того, что количество дней в месяце и часов в дне может быть разным. Пример значения такого типа: `"195 days -10:52:23.563955".`
*/

/*markdown
# ФУНКЦИИ
*/

/*markdown
### ФУНКЦИЯ EXTRACT()
*/

/*markdown
Функция `extract()` получает из значений даты/времени такие поля, как год или час.

Здесь источник — значение типа `timestamp`, `tim`e или `interval`. Допускается и тип `date`, поскольку он приводится к типу `timestamp`.

Указанное поле представляет собой идентификатор, по которому из источника выбирается заданное поле. Функция **`extract()`** возвращает значения типа `double precision`.
*/

/*markdown
**DAY** <br>
Для значений timestamp это день месяца (1-31), для значений interval — число дней.
*/

SELECT EXTRACT(DAY FROM TIMESTAMP '2001-02-16 20:38:40');
/* Результат: 16 */

SELECT EXTRACT(DAY FROM INTERVAL '40 days 1 minute');
/* Результат: 40

/*markdown
**HOUR** <br>
Час (0-23).
*/

SELECT EXTRACT(HOUR FROM TIMESTAMP '2001-02-16 20:38:40');
/* Результат: 20

/*markdown
**MONTH** <br>
Номер месяца, считая с января (1) до декабря (12).
*/

SELECT EXTRACT(MONTH FROM TIMESTAMP '2001-02-16 20:38:40');
/* Результат: 2

/*markdown
**YEAR** <br>
Поле года. Учтите, что года 0 не было, и это следует иметь в виду, вычитая из годов нашей эры годы до нашей эры.
*/

SELECT EXTRACT(YEAR FROM TIMESTAMP '2001-02-16 20:38:40');
/* Результат: 2001

/*markdown
**ISOYEAR** <br>
Год по недельному календарю ISO 8601, в который попадает дата (не применимо к интервалам).
*/

SELECT EXTRACT(ISOYEAR FROM DATE '2006-01-01');
/* Результат: 2005 */

SELECT EXTRACT(ISOYEAR FROM DATE '2006-01-02');
/* Результат: 2006

/*markdown
**WEEK** <br>
Номер недели в году по недельному календарю ISO 8601. По определению, недели ISO 8601 начинаются с понедельника, а первая неделя года включает 4 января этого года. Другими словами, первый четверг года всегда оказывается в первой неделе этого года.

В системе нумерации недель ISO первые числа января могут относиться к 52-й или 53-й неделе предыдущего года, а последние числа декабря — к первой неделе следующего года.

Поэтому для получения согласованных результатов рекомендуется использовать поле isoyear в паре с week.
*/

SELECT EXTRACT(WEEK FROM TIMESTAMP '2001-02-16 20:38:40');
/* Результат: 7

/*markdown
**CENTURY**
*/

SELECT EXTRACT(CENTURY FROM TIMESTAMP '2000-12-16 12:21:13');
/* Результат: 20 */

SELECT EXTRACT(CENTURY FROM TIMESTAMP '2001-02-16 20:38:40');
/* Результат: 21

/*markdown
**DECADE** <br>
Десятилетие.
*/

SELECT EXTRACT(DECADE FROM TIMESTAMP '2001-02-16 20:38:40');
/* Результат: 200